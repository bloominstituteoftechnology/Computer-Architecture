10000010 # LDI R0,1 (LINE COUNT)
00000000
00000001
01000101 # PUSH R0 (stack[0] = lineCount)
00000000
10000010 # LDI R1,1 (number of hashes required for line)
00000001
00000001
10000010 # LDI R0,0 (current hash count)
00000000
00000000
10000010 # LDI R2,hash (35) (symbol to print)
00000010
00100011
10000010 # LDI R4,17 (load jump location)
00000100
00010001
01001000 # PRA R2
00000010
01100101 # INC R0
00000000
10100111 # CMP R0,R1
00000000
00000001
01011000 # JLT R4 (add another hash) (JUMP TO line 9 IF NOT DONE WITH LINE)
00000100
10000010 # LDI R2,carriage return (13) (NEWLINE)
00000010
00001101
01001000 # PRA R2
00000010
10000010 # LDI R2,newline (10)
00000010
00001010
01001000 # PRA R2
00000010
10000010 # LDI R3,2
00000011
00000010
10100010 # MUL R1,R3
00000001
00000011
01000110 # POP R0
00000000
01100101 # INC R0
00000000
10000010 # LDI R3,7
00000011
00000111
10100111 # CMP R0,R3
00000000
00000011
01000101 # PUSH R0
00000000
10000010 # LDI R4,8
00000100
00001000
01011000 # JLT R4
00000100
00000001 # HLT

# R0 - current hash count for line
# R1 - total required hashes for line
# R2 - printable
# R3 - math operand (comparator, multiplier)
# R4 - jump location
